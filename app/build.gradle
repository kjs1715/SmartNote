apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.littleboss.smartnote"
        minSdkVersion 22
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation files('libs/gson-2.2.2.jar')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    implementation 'com.getbase:floatingactionbutton:1.10.1'
    implementation('com.github.ozodrukh:CircularReveal:1.1.1@aar') {
        transitive = true;
    }
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation('com.github.sendtion:XRichText:1.4') {
        exclude group: 'com.android.support'
        exclude group: 'com.github.bumptech.glide'
    }
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.github.Yalantis:Context-Menu.Android:1.0.8'
    implementation 'com.github.sendtion:XRichText:1.5'
    implementation 'com.ashokvarma.android:bottom-navigation-bar:2.0.2'

}

repositories {
    maven {
        url "https://jitpack.io"
    }
    maven {
        url "https://maven.google.com"
    }
}

task jacocoTestReport(type: JacocoReport) {
    group = "Reporting"

    reports {
        xml.enabled = true
        html.enabled = false
    }


    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/*$ViewInjector*.*',
                      '**/*$ViewBinder*.*',
                      '**/*$MembersInjector*.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*']

    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files("${project.buildDir}/jacoco/testDebugUnitTest.exec")
}
